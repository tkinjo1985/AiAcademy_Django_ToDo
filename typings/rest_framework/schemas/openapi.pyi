"""
This type stub file was generated by pyright.
"""

from .generators import BaseSchemaGenerator
from .inspectors import ViewInspector
from typing import Any, Optional

class SchemaGenerator(BaseSchemaGenerator):
    def get_info(self):
        ...
    
    def get_paths(self, request: Optional[Any] = ...):
        ...
    
    def get_schema(self, request: Optional[Any] = ..., public: bool = ...):
        """
        Generate a OpenAPI schema.
        """
        ...
    


class AutoSchema(ViewInspector):
    request_media_types = ...
    response_media_types = ...
    method_mapping = ...
    def get_operation(self, path, method):
        ...
    
    def _get_operation_id(self, path, method):
        """
        Compute an operation ID from the model, serializer or view name.
        """
        ...
    
    def _get_path_parameters(self, path, method):
        """
        Return a list of parameters from templated path variables.
        """
        ...
    
    def _get_filter_parameters(self, path, method):
        ...
    
    def _allows_filters(self, path, method):
        """
        Determine whether to include filter Fields in schema.

        Default implementation looks for ModelViewSet or GenericAPIView
        actions/methods that cause filtering on the default implementation.
        """
        ...
    
    def _get_pagination_parameters(self, path, method):
        ...
    
    def _map_field(self, field):
        ...
    
    def _map_min_max(self, field, content):
        ...
    
    def _map_serializer(self, serializer):
        ...
    
    def _map_field_validators(self, field, schema):
        """
        map field validators
        """
        ...
    
    def _get_paginator(self):
        ...
    
    def map_parsers(self, path, method):
        ...
    
    def map_renderers(self, path, method):
        ...
    
    def _get_serializer(self, method, path):
        ...
    
    def _get_request_body(self, path, method):
        self.request_media_types = ...
    
    def _get_responses(self, path, method):
        self.response_media_types = ...
    


