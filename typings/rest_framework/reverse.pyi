"""
This type stub file was generated by pyright.
"""

from django.utils.functional import lazy
from typing import Any, Optional

"""
Provide urlresolver functions that return fully qualified URLs or view names
"""
def preserve_builtin_query_params(url, request: Optional[Any] = ...):
    """
    Given an incoming request, and an outgoing URL representation,
    append the value of any built-in query parameters.
    """
    ...

def reverse(viewname, args: Optional[Any] = ..., kwargs: Optional[Any] = ..., request: Optional[Any] = ..., format: Optional[Any] = ..., **extra):
    """
    If versioning is being used then we pass any `reverse` calls through
    to the versioning scheme instance, so that the resulting URL
    can be modified if needed.
    """
    ...

def _reverse(viewname, args: Optional[Any] = ..., kwargs: Optional[Any] = ..., request: Optional[Any] = ..., format: Optional[Any] = ..., **extra):
    """
    Same as `django.urls.reverse`, but optionally takes a request
    and returns a fully qualified URL, using the request to get the base URL.
    """
    ...

reverse_lazy = lazy(reverse, str)
